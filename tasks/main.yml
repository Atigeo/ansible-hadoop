---
# tasks file for ansible-hadoop

- include: user_setup.yml

##---- Download hadoop ----------------------------------##
- name: Download hadoop binaries
  get_url: 
    url: "http://archive.cloudera.com/cdh5/cdh/5/hadoop-{{ hadoop_version }}.tar.gz"
    dest: "/tmp/"

- name: Create install_dir
  file: 
    path=: "{{ install_dir }}"
    state: directory 
    owner: "{{ hadoop_user }}"

- name: Untar archive
  unarchive: 
    src: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
    dest: "{{ install_dir }}"
    copy: no 
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
  notify: Restart hadoop

- name: Create {{ install_dir }}/hadoop link
  file: 
    src: "{{ install_dir }}/hadoop-{{ hadoop_version }}"
    dest: "{{ hadoop_home }}"
    state: link
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_user }}"
    mode: 755

##---- Configure hadoop ---------------------------------##

- name: build slaves file
  template: 
    src: "templates/slaves"
    dest: "{{ hadoop_home }}/etc/hadoop/"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"  
    mode: 0755
  when: inventory_hostname == 'hadoop-namenode-1'
  notify: Format Namenode

- name: Build core-site.xml
  template: 
    src: "templates/core-site.xml"
    dest: "{{ hadoop_home }}/etc/hadoop/"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0755
  notify: Format Namenode

- name: Build hdfs-site.xml
  template: 
    src: "templates/hdfs-site.xml"
    dest: "{{ hadoop_home }}/etc/hadoop/"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0755
  notify: Format Namenode

- name: Create HDFS data dir
  file: 
    path: "{{ hdfs_data_dir }}/test"
    state: directory
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
    mode: 0770
    recurse: yes
  notify: Format Namenode

- name: Add hadoop to path
  alternatives: 
    name: "hadoop"
    link: "/usr/bin/hadoop"
    path: "{{ hadoop_home }}/bin/hadoop"

- name: Add HADOOP_HOME
  lineinfile: 
    dest: "/etc/environment"
    line: "export HADOOP_HOME={{ hadoop_home}}"